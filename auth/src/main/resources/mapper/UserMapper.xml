<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oket.micro.auth.dao.UserDao">

    <select id="getOrgIdsByUserId" resultType="string">
        SELECT
          org_id orgId
        FROM
            sys_user_org
        WHERE
            user_id = #{userId}
  </select>
    <insert id="saveUserOrg" >
        insert into sys_user_org(user_id,org_id) values
        <foreach collection="orgIds" separator="," item="orgId" index="index">
            (#{userId},#{orgId})
        </foreach>
    </insert>
    <delete id="deleteUserOrg" >
        delete from sys_user_org where user_id=#{userId}
    </delete>
    <insert id="saveUserRole" >
        insert into sys_user_role(user_id,role_id) values
        <foreach collection="roleIds" separator="," item="roleId" index="index">
            (#{userId},#{roleId})
        </foreach>
    </insert>
    <delete id="deleteUserRole" >
        delete from sys_user_role where user_id=#{userId}
    </delete>
    <select id="queryUserList" resultMap="userResultMap">
        select a.*,c.org_name,b.org_id
        from sys_user a
        join sys_user_org b on b.user_id=a.id
        join sys_org c on c.id=b.org_id
        where 1=1
        <if test="status!=null and status!=''">
            and a.status=#{status}
        </if>
        <if test="userName!=null and userName!=''">
            and a.user_name like concat('%',#{userName},'%')
        </if>
        <if test="loginName!=null and loginName!=''">
            and a.login_name like concat('%',#{loginName},'%')
        </if>
        <if test="orgIdList!=null ">
            and b.org_id in
            <foreach collection="orgIdList" separator="," item="orgId" index="index" open="(" close=")">
                #{orgId}
            </foreach>
        </if>
        order by a.create_time
        <if test="offSet!=null and pageRow!=null ">
            LIMIT #{pageRow} offset #{offSet}
        </if>
    </select>
    <select id="queryUserListCount" resultType="int">
        select count(1)
        from sys_user a
        join sys_user_org b on b.user_id=a.id
        join sys_org c on c.id=b.org_id
        where 1=1
        <if test="status!=null and status!=''">
            and a.status=#{status}
        </if>
        <if test="userName!=null and userName!=''">
            and a.user_name like concat('%',#{userName},'%')
        </if>
        <if test="loginName!=null and loginName!=''">
            and a.login_name like concat('%',#{loginName},'%')
        </if>
        <if test="orgIdList!=null ">
            and b.org_id in
            <foreach collection="orgIdList" separator="," item="orgId" index="index" open="(" close=")">
                #{orgId}
            </foreach>
        </if>
    </select>
    <resultMap id="userResultMap" type="com.oket.micro.auth.dto.UserDto" >
        <result property="id" column="id"/>
        <result property="loginName" column="login_name"/>
        <result property="userName" column="user_name"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="status" column="status"/>
        <result property="loginTime" column="login_time"/>
        <result property="email" column="email"/>
        <result property="orgName" column="org_name"/>
        <result property="orgId" column="org_id"/>
        <collection property="roleNames" select="com.oket.micro.auth.dao.UserDao.getRoleNamesByUserId" column="id"/>
        <collection property="roleIds" select="com.oket.micro.auth.dao.UserDao.getRoleIdsByUserId" column="id"/>
    </resultMap>
    <select id="getRoleNamesByUserId" resultType="string" parameterType="int">
        select b.role_name from sys_user_role a
        join sys_role b on b.id=a.role_id
        where a.user_id=#{user_id}
    </select>
    <select id="getRoleIdsByUserId" resultType="integer" parameterType="int">
        select a.role_id from sys_user_role a
        join sys_role b on b.id=a.role_id
        where a.user_id=#{user_id}
    </select>
</mapper>